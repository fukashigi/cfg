# kakrc


# ui_options
colorscheme base16-ocean
set-face global Default            rgb:bcbabe,rgb:101520
set-face global PrimarySelection   rgb:f050f0,rgb:000000
set-face global PrimaryCursor      rgb:f0f0f0,rgb:602060
set-face global SecondarySelection rgb:50f0f0,rgb:000000
set-face global SecondaryCursor    rgb:000000,rgb:50f0f0
set-face global LineNumbers        rgb:4f5b66,rgb:101520
set-face global LineNumberCursor   rgb:ebcb8b,rgb:303030
set-face global BufferPadding      rgb:65737e,rgb:101520
set global ui_options ncurses_enable_mouse=false:ncurses_assistant=dilbert:ncurses_set_title=false


# global options
set global autoreload ask
set global indentwidth 4
set global scrolloff 10,1
set global tabstop 4
set global termcmd 'st -c kakoune -e sh -c'


# bindings - global
map global insert <backspace> '<a-;>:insert-backspace<ret>'


# bindings - user
map global user c ':comment-line<ret>' -docstring "comment toggle for line"
map global user q ':bp<ret>' -docstring "buffer prev"
map global user w ':bn<ret>' -docstring "buffer next"
map global user = '<a-i>w:spell-replace<ret>' -docstring "spell-replace word"

map global user t 'hatch-terminal-x11<ret>' -docstring "terminal hatch"

#map global user z ':godlv-break-here' -docstring "dlv: add to break list"
#map global user x ':godlv-clear-breaks' -docstring "dlv: clear break list"
map global user z ':lint-previous-error<ret>' -docstring "previous lint error"
map global user x ':lint-next-error<ret>' -docstring "next lint error"

map global user f '|fmt -w 80<ret>' -docstring "fmt -w 80"
map global user s '|sort -bn<ret>' -docstring "sort -bn"

map global user p '<a-!>xsel -ob<ret>' -docstring "xsel --output --clipboard"
map global user P '!xsel -ob<ret>' -docstring "xsel --output --clipboard"


# hooks - run-of-the-mill
hook global WinCreate .* %{
    addhl window number_lines -relative -hlcursor -separator " â”¤ "
    addhl window show_matching
}
hook global NormalKey <esc> %{ try %{
    rmhl dynregex_%reg{<slash>}
}}
hook global InsertChar \t %{
    exec -draft h@
}
hook global NormalKey y|d|c %{ nop %sh{
  printf %s "$kak_reg_dquote" | xsel --input --clipboard
}}


# funcs
def -hidden insert-backspace %{
    try %{
        exec -draft -no-hooks h %opt{indentwidth}H <a-k>\A<space>+\Z<ret> d
    } catch %{
        exec <backspace>
    }
}
def ide %{
    rename-client main
    set global jumpclient main
    new rename-client tools
    set global toolsclient tools
    set global docsclient tools
}


# hooks - language-specific
hook global WinSetOption filetype=go %{
    set window indentwidth 0
    set window tabstop 8
    set window lintcmd "run() { sync; cp $1 $1.go; golint $1.go; vgo vet $1.go 2>&1 | sed -E 's/: /: error: /'; } && run"
    set window formatcmd 'goimports'
    set window makecmd 'vgo build'

    lint-enable
    go-enable-autocomplete

    hook buffer BufWritePre .* %{ go-format -use-goimports }
    hook buffer BufWritePost .* lint

    map window user d ':go-doc-info<ret>' -docstring "go: get docs"
    map window user j ':go-jump<ret>' -docstring "go: jump to def"
}
hook global WinSetOption filetype=sh %{
    set window lintcmd 'shellcheck -fgcc -Cnever'

    lint-enable

    hook buffer BufWritePost .* lint
}
hook global WinSetOption filetype=python %{
    set window formatcmd 'autopep8 -'
    set window lintcmd 'flake8'
    lint-enable

    #hook buffer BufWritePre .* format
    hook buffer BufWritePost .* lint
}
hook global WinSetOption filetype=makefile %{
    set window indentwidth 0
}
hook global WinSetOption filetype=json %{
    set window indentwidth 2
}
hook global WinSetOption filetype=yaml %{
    lint-enable
    set window indentwidth 2
    set window lintcmd 'yamllint -f parsable'
    hook buffer BufWritePost .* lint
}
