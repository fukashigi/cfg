" vimrc
" 
" mel@thestack.co
" -----------------------------------------------------------------------------
set nocompatible


" vundle
filetype off
set rtp+=~/.vim/bundle/vundle
call vundle#rc()

Plugin 'itchyny/lightline.vim'
Plugin 'edkolev/promptline.vim'
Plugin 'gmarik/vundle'
Plugin 'godlygeek/tabular'
Plugin 'kana/vim-arpeggio'
Plugin 'klen/python-mode'
Plugin 'saltstack/salt-vim'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-speeddating'
Plugin 'tpope/vim-surround'
Bundle 'nginx.vim'

filetype plugin indent on


" get the leader set nice and early
let mapleader=","
let maplocalleader="_"


" a buncha shit
set autoindent  " copy indent from current line
set autoread  " auto read changed file
set autowrite  " auto write on buffer/tag switch
set backspace=indent,eol,start
set backupskip+=/var/spool/cron/*
set clipboard+=unnamed
set cmdheight=2
set confirm  " ask before discarding changes
set cursorline
set encoding=utf-8
set expandtab
set fileformat=unix
set grepformat=%f:%l%m,%f\ \ %l%m
set grepprg=grep\ -nH\ $*
set hidden
set history=1000
set hlsearch
set ignorecase smartcase  " ignore case on searches unless explicitly cased
set incsearch
set laststatus=2
set lazyredraw
set matchtime=2  " tenths of a second to show matching paren
set nofoldenable
set noicon  " x-window icon... heh
set nowrap
set number
set report=0  " always report changes
set ruler
set scrolloff=5  " keep some context around the cursor
set shell=/bin/bash
set shiftwidth=4
set showcmd
set showmatch
set showtabline=2  " always show the tabline
set sidescroll=1
set sidescrolloff=15
set smartindent
set smarttab
set tabstop=4
set textwidth=512
set title
set ttyfast
set viminfo^=%
set wildignore=*.o,*~,*.pyc
set wildmenu
set wildmode=longest,list

" tmp dir
" NOTE this can fail
if !isdirectory(expand("~/.vim-undo/.")) || !isdirectory(expand("~/.vim-backup/."))
    !mkdir -p ~/.vim-backup
    !mkdir -p ~/.vim-undo
endif

" backups
set bdir=~/.vim-backup
set noswapfile
set backup
set writebackup
set backupskip=/tmp/*,$TMP/*

" preserve undo
set undodir=~/.vim-undo
set undofile

" stop vim from clobbering the scrollback buffer
" http://www.shallowsky.com/linux/noaltscreen.html
set t_ti= t_te=


" jump to last known cursor position
augroup vimrcEx
    autocmd!
    autocmd BufReadPost * if line("'\'") > 0 && line("'\'") <= line("$") | exe "normal g`\"" | endif
augroup END


" various keymaps

" tabs and buffers
nnoremap <F3> :tabp<CR>
nnoremap <F4> :tabn<CR>
nnoremap <F5> :buffers<CR>:buffer<Space>
nnoremap <F7> :bprev<CR>
nnoremap <F8> :bnext<CR>

" clear search buffer when hitting return
:nnoremap <CR> :nohlsearch<cr>

" paste
set pastetoggle=<F11>

" whitespace visibility: <leader><space>
set listchars=tab:>-,trail:·,eol:$
nmap <silent> <leader><space> :set nolist!<CR>

" strip trailing whitespace: <leader>$
nnoremap <silent> <leader>$ :call Preserve("%s/\\s\\+$//e")<CR>

" disable arrow keys
nnoremap <up> <nop>
nnoremap <left> <nop>
nnoremap <down> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <left> <nop>
inoremap <down> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" snippets
imap ;) ()<esc>i
imap ;] []<esc>i
imap ;} {}<esc>i
imap ;> <><esc>i


" colors, syntax, etc
set background=dark
set t_Co=256
colorscheme lomokai
syntax on


" filetypes
autocmd FileType HTML       setlocal ts=2 sts=2 sw=2 et
autocmd FileType javascript setlocal ts=2 sts=2 sw=2 et
autocmd FileType sh         setlocal makeprg=bash\ % autowrite
autocmd FileType python     setlocal makeprg=python2\ % autowrite
autocmd BufNewFile *        silent! 0r $HOME/.vim/templates/%:e.tpl
autocmd BufRead,BufNewFile /etc/nginx/*     set ft=nginx
autocmd BufRead,BufNewFile *.wiki           set ft=Wikipedia
autocmd BufRead,BufNewFile /etc/haproxy/*   set ft=haproxy
autocmd BufRead,BufNewFile ~/.mail/mutt/*   set ft=muttrc


" netrw
let g:netrw_liststyle=3  " tree-mode


" arpeggio plugin
call arpeggio#load()
Arpeggio inoremap jk <Esc>


" functions
function! Preserve(command)
    " save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " execute the command
    execute a:command
    " restore previous search and position
    let @/=_s
    call cursor(l, c)
endfunction


" spelling <leader>s
set spelllang=en_nz
nmap <silent> <leader>s :set spell!<cr>


" various leader mappings
nnoremap <leader>1 :1b<CR>
nnoremap <leader>2 :2b<CR>
nnoremap <leader>3 :3b<CR>
nnoremap <leader>4 :4b<CR>
nnoremap <leader>5 :5b<CR>
nnoremap <leader>6 :6b<CR>
nnoremap <leader>7 :7b<CR>
nnoremap <leader>8 :8b<CR>
nnoremap <leader>9 :9b<CR>
nnoremap <leader>0 :10b<CR>


" abbreviations
iab <expr> dts strftime("%FT%T%z")


" pymode settings
let g:pymode_lint_ignore = "E501,C901"
let g:pymode_rope = 0
let g:pymode_trim_whitespaces = 1


" lightline
" let g:airline_theme = "badwolf"
" let g:airline_powerline_fonts = 1
" let g:airline#extensions#tabline#enabled = 1
let g:lightline = {
    \ 'colorscheme': 'wombat',
    \ 'component': {
    \   'readonly': '%{&readonly?"⭤":""}',
    \ },
    \ 'separator': { 'left': "⮀", 'right': "⮂" },
    \ 'subseparator': { 'left': "⮁", 'right': "(" }
    \ }
